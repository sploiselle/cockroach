[
  {
    "name": "Process",
    "longName": "process",
    "description": "These charts detail the overall performance of the <code>cockroach</code> process running on this server.",
    "collectionName": "process-all",
    "level": 0,
    "subsections": [
      {
        "name": "CPU",
        "longName": "All CPU",
        "collectionName": "process-cpu-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Time",
            "longName": "CPU Time",
            "collectionName": "cpu-time",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sys.cpu.user.ns",
                  "description": "Total user cpu time in nanoseconds",
                  "location": "server/status/runtime.go"
                },
                {
                  "name": "sys.cpu.sys.ns",
                  "description": "Total system cpu time in nanoseconds",
                  "location": "server/status/runtime.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Percentage",
            "longName": "CPU Percentage",
            "collectionName": "cpu-percentage",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sys.cpu.user.percent",
                  "description": "Current user cpu percentage",
                  "location": "server/status/runtime.go"
                },
                {
                  "name": "sys.cpu.sys.percent",
                  "description": "Current system cpu percentage",
                  "location": "server/status/runtime.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Percent"
            }
          }
        ]
      },
      {
        "name": "Server",
        "longName": "All Server",
        "collectionName": "process-server-all",
        "level": 1,
        "subsections": [
          {
            "name": "Overview",
            "longName": "All Server Overview",
            "collectionName": "process-server-overview-all",
            "level": 2,
            "charts": [
              {
                "name": "RSS",
                "longName": "Server Overview RSS",
                "collectionName": "server-overview-rss",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sys.rss",
                      "description": "Current process RSS",
                      "location": "server/status/runtime.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "RSS"
                }
              },
              {
                "name": "File Descriptors (FD)",
                "longName": "Server Overview File Descriptors (FD)",
                "collectionName": "server-overview-file-descriptors-fd",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sys.fd.open",
                      "description": "Process open file descriptors",
                      "location": "server/status/runtime.go"
                    },
                    {
                      "name": "sys.fd.softlimit",
                      "description": "Process open FD soft limit",
                      "location": "server/status/runtime.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "File Descriptors"
                }
              },
              {
                "name": "Uptime",
                "longName": "Server Overview Uptime",
                "collectionName": "server-overview-uptime",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sys.uptime",
                      "description": "Process uptime in seconds",
                      "location": "server/status/runtime.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Duration",
                  "axisLabel": "Time"
                }
              }
            ]
          },
          {
            "name": "cgo",
            "longName": "All Server cgo",
            "collectionName": "process-server-cgo-all",
            "level": 2,
            "charts": [
              {
                "name": "Calls",
                "longName": "Server cgo Calls",
                "collectionName": "server-cgo-calls",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sys.cgocalls",
                      "description": "Total number of cgo calls",
                      "location": "server/status/runtime.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "cgo Calls"
                }
              },
              {
                "name": "Memory",
                "longName": "Server cgo Memory",
                "collectionName": "server-cgo-memory",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sys.cgo.allocbytes",
                      "description": "Current bytes of memory allocated by cgo",
                      "location": "server/status/runtime.go"
                    },
                    {
                      "name": "sys.cgo.totalbytes",
                      "description": "Total bytes of memory allocated by cgo, but not released",
                      "location": "server/status/runtime.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              }
            ]
          },
          {
            "name": "go",
            "longName": "All Server go",
            "collectionName": "process-server-go-all",
            "level": 2,
            "charts": [
              {
                "name": "goroutines",
                "longName": "Server go goroutines",
                "collectionName": "server-go-goroutines",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sys.goroutines",
                      "description": "Current number of goroutines",
                      "location": "server/status/runtime.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "goroutines"
                }
              },
              {
                "name": "Memory",
                "longName": "Server go Memory",
                "collectionName": "server-go-memory",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sys.go.allocbytes",
                      "description": "Current bytes of memory allocated by go",
                      "location": "server/status/runtime.go"
                    },
                    {
                      "name": "sys.go.totalbytes",
                      "description": "Total bytes of memory allocated by go, but not released",
                      "location": "server/status/runtime.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              }
            ]
          }
        ],
        "charts": []
      },
      {
        "name": "Node",
        "longName": "All Node",
        "collectionName": "process-node-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "ID",
            "longName": "Node ID",
            "collectionName": "node-id",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "node-id",
                  "description": "node ID with labels for advertised RPC and HTTP addresses",
                  "location": "server/status/recorder.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "ID"
            }
          }
        ]
      },
      {
        "name": "Build Info",
        "longName": "All Build Info",
        "collectionName": "process-build-info-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Timestamp",
            "longName": "Build Info Timestamp",
            "collectionName": "build-info-timestamp",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "build.timestamp",
                  "description": "Build information",
                  "location": ""
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      },
      {
        "name": "Certificates",
        "longName": "All Certificates",
        "collectionName": "process-certificates-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "CA Expiration",
            "longName": "Certificates CA Expiration",
            "collectionName": "certificates-ca-expiration",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "security.certificate.expiration.ca",
                  "description": "Expiration timestamp in seconds since Unix epoch for the CA certificate. 0 means no certificate or error.",
                  "location": ""
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Node Cert Expiration",
            "longName": "Certificates Node Cert Expiration",
            "collectionName": "certificates-node-cert-expiration",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "security.certificate.expiration.node",
                  "description": "Expiration timestamp in seconds since Unix epoch for the node certificate. 0 means no certificate or error.",
                  "location": ""
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      },
      {
        "name": "Clocks",
        "longName": "All Clocks",
        "collectionName": "process-clocks-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Offsets",
            "longName": "Clocks Offsets",
            "collectionName": "clocks-offsets",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "clock-offset.meannanos",
                  "description": "Mean clock offset with other nodes in nanoseconds",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "clock-offset.stddevnanos",
                  "description": "Stdddev clock offset with other nodes in nanoseconds",
                  "location": "rpc/clock_offset.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "AVG",
              "rate": "Non-negative rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Roundtrip Latency",
            "longName": "Clocks Roundtrip Latency",
            "collectionName": "clocks-roundtrip-latency",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "round-trip-latency-max",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for max",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p50",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p50",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p75",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p75",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p90",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p90",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p99",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p99",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p99.9",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p99.9",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p99.99",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p99.99",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p99.999",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p99.999",
                  "location": "rpc/clock_offset.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      }
    ]
  },
  {
    "name": "SQL Layer",
    "longName": "SQL Layer",
    "description": "In the SQL layer, nodes receive commands and then parse, plan, and execute them. <br/><br/><a class=\"catalog-link\" href=\"https://www.cockroachlabs.com/docs/stable/architecture/sql-layer.html\">SQL Layer Architecture Docs >></a>",
    "collectionName": "sql-layer-all",
    "level": 0,
    "subsections": [
      {
        "name": "SQL",
        "longName": "All SQL",
        "collectionName": "sql-layer-sql-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Transaction Control Mix",
            "longName": "SQL Transaction Control Mix",
            "collectionName": "sql-transaction-control-mix",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.txn.begin.count",
                  "description": "Number of SQL transaction BEGIN statements",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.txn.commit.count",
                  "description": "Number of SQL transaction COMMIT statements",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.txn.abort.count",
                  "description": "Number of SQL transaction ABORT statements",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.txn.rollback.count",
                  "description": "Number of SQL transaction ROLLBACK statements",
                  "location": "sql/executor.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Statements"
            }
          },
          {
            "name": "DML Mix",
            "longName": "SQL DML Mix",
            "collectionName": "sql-dml-mix",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.select.count",
                  "description": "Number of SQL SELECT statements",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.update.count",
                  "description": "Number of SQL UPDATE statements",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.insert.count",
                  "description": "Number of SQL INSERT statements",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.delete.count",
                  "description": "Number of SQL DELETE statements",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.misc.count",
                  "description": "Number of other SQL statements",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.query.count",
                  "description": "Number of SQL queries",
                  "location": "sql/executor.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Rate",
              "units": "Count",
              "axisLabel": "Statements"
            }
          },
          {
            "name": "Exec Latency",
            "longName": "SQL Exec Latency",
            "collectionName": "sql-exec-latency",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.exec.latency-max",
                  "description": "Latency in nanoseconds of SQL statement execution for max",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.exec.latency-p50",
                  "description": "Latency in nanoseconds of SQL statement execution for p50",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.exec.latency-p75",
                  "description": "Latency in nanoseconds of SQL statement execution for p75",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.exec.latency-p90",
                  "description": "Latency in nanoseconds of SQL statement execution for p90",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.exec.latency-p99",
                  "description": "Latency in nanoseconds of SQL statement execution for p99",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.exec.latency-p99.9",
                  "description": "Latency in nanoseconds of SQL statement execution for p99.9",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.exec.latency-p99.99",
                  "description": "Latency in nanoseconds of SQL statement execution for p99.99",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.exec.latency-p99.999",
                  "description": "Latency in nanoseconds of SQL statement execution for p99.999",
                  "location": "sql/executor.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Service Latency",
            "longName": "SQL Service Latency",
            "collectionName": "sql-service-latency",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.service.latency-max",
                  "description": "Latency in nanoseconds of SQL request execution for max",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.service.latency-p50",
                  "description": "Latency in nanoseconds of SQL request execution for p50",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.service.latency-p75",
                  "description": "Latency in nanoseconds of SQL request execution for p75",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.service.latency-p90",
                  "description": "Latency in nanoseconds of SQL request execution for p90",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.service.latency-p99",
                  "description": "Latency in nanoseconds of SQL request execution for p99",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.service.latency-p99.9",
                  "description": "Latency in nanoseconds of SQL request execution for p99.9",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.service.latency-p99.99",
                  "description": "Latency in nanoseconds of SQL request execution for p99.99",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.service.latency-p99.999",
                  "description": "Latency in nanoseconds of SQL request execution for p99.999",
                  "location": "sql/executor.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "DDL Count",
            "longName": "SQL DDL Count",
            "collectionName": "sql-ddl-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.ddl.count",
                  "description": "Number of SQL DDL statements",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.query.count",
                  "description": "Number of SQL queries",
                  "location": "sql/executor.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Rate",
              "units": "Count",
              "axisLabel": "Statements"
            }
          },
          {
            "name": "Connections",
            "longName": "SQL Connections",
            "collectionName": "sql-connections",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.conns",
                  "description": "Number of active sql connections",
                  "location": "sql/pgwire/server.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Connections"
            }
          },
          {
            "name": "Byte I/O",
            "longName": "SQL Byte I/O",
            "collectionName": "sql-byte-i-o",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.bytesin",
                  "description": "Number of sql bytes received",
                  "location": "sql/pgwire/server.go"
                },
                {
                  "name": "sql.bytesout",
                  "description": "Number of sql bytes sent",
                  "location": "sql/pgwire/server.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Bytes",
              "axisLabel": "Size"
            }
          }
        ]
      },
      {
        "name": "DistSQL",
        "longName": "All DistSQL",
        "collectionName": "sql-layer-distsql-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Active Queries",
            "longName": "DistSQL Active Queries",
            "collectionName": "distsql-active-queries",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.distsql.queries.active",
                  "description": "Number of distributed SQL queries currently active",
                  "location": "sql/distsqlrun/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Queries"
            }
          },
          {
            "name": "Total Queries",
            "longName": "DistSQL Total Queries",
            "collectionName": "distsql-total-queries",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.distsql.queries.total",
                  "description": "Number of distributed SQL queries executed",
                  "location": "sql/distsqlrun/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Queries"
            }
          },
          {
            "name": "Active Flows",
            "longName": "DistSQL Active Flows",
            "collectionName": "distsql-active-flows",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.distsql.flows.active",
                  "description": "Number of distributed SQL flows currently active",
                  "location": "sql/distsqlrun/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Flows"
            }
          },
          {
            "name": "Total Flows",
            "longName": "DistSQL Total Flows",
            "collectionName": "distsql-total-flows",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.distsql.flows.total",
                  "description": "Number of distributed SQL flows executed",
                  "location": "sql/distsqlrun/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Flows"
            }
          },
          {
            "name": "Memory Usage per Statement",
            "longName": "DistSQL Memory Usage per Statement",
            "collectionName": "distsql-memory-usage-per-statement",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.mem.distsql.max-max",
                  "description": "Memory usage per sql statement for distsql for max",
                  "location": "sql/distsqlrun/metrics.go"
                },
                {
                  "name": "sql.mem.distsql.max-p50",
                  "description": "Memory usage per sql statement for distsql for p50",
                  "location": "sql/distsqlrun/metrics.go"
                },
                {
                  "name": "sql.mem.distsql.max-p75",
                  "description": "Memory usage per sql statement for distsql for p75",
                  "location": "sql/distsqlrun/metrics.go"
                },
                {
                  "name": "sql.mem.distsql.max-p90",
                  "description": "Memory usage per sql statement for distsql for p90",
                  "location": "sql/distsqlrun/metrics.go"
                },
                {
                  "name": "sql.mem.distsql.max-p99",
                  "description": "Memory usage per sql statement for distsql for p99",
                  "location": "sql/distsqlrun/metrics.go"
                },
                {
                  "name": "sql.mem.distsql.max-p99.9",
                  "description": "Memory usage per sql statement for distsql for p99.9",
                  "location": "sql/distsqlrun/metrics.go"
                },
                {
                  "name": "sql.mem.distsql.max-p99.99",
                  "description": "Memory usage per sql statement for distsql for p99.99",
                  "location": "sql/distsqlrun/metrics.go"
                },
                {
                  "name": "sql.mem.distsql.max-p99.999",
                  "description": "Memory usage per sql statement for distsql for p99.999",
                  "location": "sql/distsqlrun/metrics.go"
                }
              ],
              "downsampler": "",
              "aggregator": "",
              "rate": "",
              "units": "Bytes",
              "axisLabel": "Size"
            }
          },
          {
            "name": "Current Memory Usage",
            "longName": "DistSQL Current Memory Usage",
            "collectionName": "distsql-current-memory-usage",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.mem.distsql.current",
                  "description": "Current sql statement memory usage for distsql",
                  "location": "sql/distsqlrun/metrics.go"
                }
              ],
              "downsampler": "",
              "aggregator": "",
              "rate": "Non-negative rate",
              "units": "Bytes",
              "axisLabel": "Size"
            }
          },
          {
            "name": "DML Mix",
            "longName": "DistSQL DML Mix",
            "collectionName": "distsql-dml-mix",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.distsql.select.count",
                  "description": "Number of DistSQL SELECT statements",
                  "location": "sql/executor.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Statements"
            }
          },
          {
            "name": "Exec Latency",
            "longName": "DistSQL Exec Latency",
            "collectionName": "distsql-exec-latency",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.distsql.exec.latency-max",
                  "description": "Latency in nanoseconds of DistSQL statement execution for max",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.exec.latency-p50",
                  "description": "Latency in nanoseconds of DistSQL statement execution for p50",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.exec.latency-p75",
                  "description": "Latency in nanoseconds of DistSQL statement execution for p75",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.exec.latency-p90",
                  "description": "Latency in nanoseconds of DistSQL statement execution for p90",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.exec.latency-p99",
                  "description": "Latency in nanoseconds of DistSQL statement execution for p99",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.exec.latency-p99.9",
                  "description": "Latency in nanoseconds of DistSQL statement execution for p99.9",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.exec.latency-p99.99",
                  "description": "Latency in nanoseconds of DistSQL statement execution for p99.99",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.exec.latency-p99.999",
                  "description": "Latency in nanoseconds of DistSQL statement execution for p99.999",
                  "location": "sql/executor.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Service Latency",
            "longName": "DistSQL Service Latency",
            "collectionName": "distsql-service-latency",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "sql.distsql.service.latency-max",
                  "description": "Latency in nanoseconds of DistSQL request execution for max",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.service.latency-p50",
                  "description": "Latency in nanoseconds of DistSQL request execution for p50",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.service.latency-p75",
                  "description": "Latency in nanoseconds of DistSQL request execution for p75",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.service.latency-p90",
                  "description": "Latency in nanoseconds of DistSQL request execution for p90",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.service.latency-p99",
                  "description": "Latency in nanoseconds of DistSQL request execution for p99",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.service.latency-p99.9",
                  "description": "Latency in nanoseconds of DistSQL request execution for p99.9",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.service.latency-p99.99",
                  "description": "Latency in nanoseconds of DistSQL request execution for p99.99",
                  "location": "sql/executor.go"
                },
                {
                  "name": "sql.distsql.service.latency-p99.999",
                  "description": "Latency in nanoseconds of DistSQL request execution for p99.999",
                  "location": "sql/executor.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      },
      {
        "name": "SQL Memory",
        "longName": "All SQL Memory",
        "collectionName": "sql-layer-sql-memory-all",
        "level": 1,
        "subsections": [
          {
            "name": "Admin",
            "longName": "All SQL Memory Admin",
            "collectionName": "sql-layer-sql-memory-admin-all",
            "level": 2,
            "charts": [
              {
                "name": "All",
                "longName": "SQL Memory Admin All",
                "collectionName": "sql-memory-admin-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.admin.max-max",
                      "description": "Memory usage per sql statement for sql.mem.admin.max for max",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.max-p50",
                      "description": "Memory usage per sql statement for sql.mem.admin.max for p50",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.max-p75",
                      "description": "Memory usage per sql statement for sql.mem.admin.max for p75",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.max-p90",
                      "description": "Memory usage per sql statement for sql.mem.admin.max for p90",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.max-p99",
                      "description": "Memory usage per sql statement for sql.mem.admin.max for p99",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.max-p99.9",
                      "description": "Memory usage per sql statement for sql.mem.admin.max for p99.9",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.max-p99.99",
                      "description": "Memory usage per sql statement for sql.mem.admin.max for p99.99",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.max-p99.999",
                      "description": "Memory usage per sql statement for sql.mem.admin.max for p99.999",
                      "location": "sql/mem_metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Current",
                "longName": "SQL Memory Admin Current",
                "collectionName": "sql-memory-admin-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.admin.current",
                      "description": "Current sql statement memory usage for sql.mem.admin.current",
                      "location": "sql/mem_metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Txn All",
                "longName": "SQL Memory Admin Txn All",
                "collectionName": "sql-memory-admin-txn-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.admin.txn.max-max",
                      "description": "Memory usage per sql transaction for sql.mem.admin.txn.max for max",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.txn.max-p50",
                      "description": "Memory usage per sql transaction for sql.mem.admin.txn.max for p50",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.txn.max-p75",
                      "description": "Memory usage per sql transaction for sql.mem.admin.txn.max for p75",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.txn.max-p90",
                      "description": "Memory usage per sql transaction for sql.mem.admin.txn.max for p90",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.txn.max-p99",
                      "description": "Memory usage per sql transaction for sql.mem.admin.txn.max for p99",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.txn.max-p99.9",
                      "description": "Memory usage per sql transaction for sql.mem.admin.txn.max for p99.9",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.txn.max-p99.99",
                      "description": "Memory usage per sql transaction for sql.mem.admin.txn.max for p99.99",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.txn.max-p99.999",
                      "description": "Memory usage per sql transaction for sql.mem.admin.txn.max for p99.999",
                      "location": "sql/mem_metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Txn Current",
                "longName": "SQL Memory Admin Txn Current",
                "collectionName": "sql-memory-admin-txn-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.admin.txn.current",
                      "description": "Current sql transaction memory usage for sql.mem.admin.txn.current",
                      "location": "sql/mem_metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Session All",
                "longName": "SQL Memory Admin Session All",
                "collectionName": "sql-memory-admin-session-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.admin.session.max-max",
                      "description": "Memory usage per sql session for sql.mem.admin.session.max for max",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.session.max-p50",
                      "description": "Memory usage per sql session for sql.mem.admin.session.max for p50",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.session.max-p75",
                      "description": "Memory usage per sql session for sql.mem.admin.session.max for p75",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.session.max-p90",
                      "description": "Memory usage per sql session for sql.mem.admin.session.max for p90",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.session.max-p99",
                      "description": "Memory usage per sql session for sql.mem.admin.session.max for p99",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.session.max-p99.9",
                      "description": "Memory usage per sql session for sql.mem.admin.session.max for p99.9",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.session.max-p99.99",
                      "description": "Memory usage per sql session for sql.mem.admin.session.max for p99.99",
                      "location": "sql/mem_metrics.go"
                    },
                    {
                      "name": "sql.mem.admin.session.max-p99.999",
                      "description": "Memory usage per sql session for sql.mem.admin.session.max for p99.999",
                      "location": "sql/mem_metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Session Current",
                "longName": "SQL Memory Admin Session Current",
                "collectionName": "sql-memory-admin-session-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.admin.session.current",
                      "description": "Current sql session memory usage for sql.mem.admin.session.current",
                      "location": "sql/mem_metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              }
            ]
          },
          {
            "name": "Client",
            "longName": "All SQL Memory Client",
            "collectionName": "sql-layer-sql-memory-client-all",
            "level": 2,
            "charts": [
              {
                "name": "All",
                "longName": "SQL Memory Client All",
                "collectionName": "sql-memory-client-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.client.max-max",
                      "description": "Memory usage per sql statement for sql.mem.client.max for max",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.max-p50",
                      "description": "Memory usage per sql statement for sql.mem.client.max for p50",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.max-p75",
                      "description": "Memory usage per sql statement for sql.mem.client.max for p75",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.max-p90",
                      "description": "Memory usage per sql statement for sql.mem.client.max for p90",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.max-p99",
                      "description": "Memory usage per sql statement for sql.mem.client.max for p99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.max-p99.9",
                      "description": "Memory usage per sql statement for sql.mem.client.max for p99.9",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.max-p99.99",
                      "description": "Memory usage per sql statement for sql.mem.client.max for p99.99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.max-p99.999",
                      "description": "Memory usage per sql statement for sql.mem.client.max for p99.999",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Current",
                "longName": "SQL Memory Client Current",
                "collectionName": "sql-memory-client-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.client.current",
                      "description": "Current sql statement memory usage for sql.mem.client.current",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Txn All",
                "longName": "SQL Memory Client Txn All",
                "collectionName": "sql-memory-client-txn-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.client.txn.max-max",
                      "description": "Memory usage per sql transaction for sql.mem.client.txn.max for max",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.txn.max-p50",
                      "description": "Memory usage per sql transaction for sql.mem.client.txn.max for p50",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.txn.max-p75",
                      "description": "Memory usage per sql transaction for sql.mem.client.txn.max for p75",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.txn.max-p90",
                      "description": "Memory usage per sql transaction for sql.mem.client.txn.max for p90",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.txn.max-p99",
                      "description": "Memory usage per sql transaction for sql.mem.client.txn.max for p99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.txn.max-p99.9",
                      "description": "Memory usage per sql transaction for sql.mem.client.txn.max for p99.9",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.txn.max-p99.99",
                      "description": "Memory usage per sql transaction for sql.mem.client.txn.max for p99.99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.txn.max-p99.999",
                      "description": "Memory usage per sql transaction for sql.mem.client.txn.max for p99.999",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Txn Current",
                "longName": "SQL Memory Client Txn Current",
                "collectionName": "sql-memory-client-txn-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.client.txn.current",
                      "description": "Current sql transaction memory usage for sql.mem.client.txn.current",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Session All",
                "longName": "SQL Memory Client Session All",
                "collectionName": "sql-memory-client-session-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.client.session.max-max",
                      "description": "Memory usage per sql session for sql.mem.client.session.max for max",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.session.max-p50",
                      "description": "Memory usage per sql session for sql.mem.client.session.max for p50",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.session.max-p75",
                      "description": "Memory usage per sql session for sql.mem.client.session.max for p75",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.session.max-p90",
                      "description": "Memory usage per sql session for sql.mem.client.session.max for p90",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.session.max-p99",
                      "description": "Memory usage per sql session for sql.mem.client.session.max for p99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.session.max-p99.9",
                      "description": "Memory usage per sql session for sql.mem.client.session.max for p99.9",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.session.max-p99.99",
                      "description": "Memory usage per sql session for sql.mem.client.session.max for p99.99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.client.session.max-p99.999",
                      "description": "Memory usage per sql session for sql.mem.client.session.max for p99.999",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Session Current",
                "longName": "SQL Memory Client Session Current",
                "collectionName": "sql-memory-client-session-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.client.session.current",
                      "description": "Current sql session memory usage for sql.mem.client.session.current",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              }
            ]
          },
          {
            "name": "Internal",
            "longName": "All SQL Memory Internal",
            "collectionName": "sql-layer-sql-memory-internal-all",
            "level": 2,
            "charts": [
              {
                "name": "All",
                "longName": "SQL Memory Internal All",
                "collectionName": "sql-memory-internal-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.internal.max-max",
                      "description": "Memory usage per sql statement for sql.mem.internal.max for max",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.max-p50",
                      "description": "Memory usage per sql statement for sql.mem.internal.max for p50",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.max-p75",
                      "description": "Memory usage per sql statement for sql.mem.internal.max for p75",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.max-p90",
                      "description": "Memory usage per sql statement for sql.mem.internal.max for p90",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.max-p99",
                      "description": "Memory usage per sql statement for sql.mem.internal.max for p99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.max-p99.9",
                      "description": "Memory usage per sql statement for sql.mem.internal.max for p99.9",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.max-p99.99",
                      "description": "Memory usage per sql statement for sql.mem.internal.max for p99.99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.max-p99.999",
                      "description": "Memory usage per sql statement for sql.mem.internal.max for p99.999",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Current",
                "longName": "SQL Memory Internal Current",
                "collectionName": "sql-memory-internal-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.internal.current",
                      "description": "Current sql statement memory usage for sql.mem.internal.current",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Txn All",
                "longName": "SQL Memory Internal Txn All",
                "collectionName": "sql-memory-internal-txn-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.internal.txn.max-max",
                      "description": "Memory usage per sql transaction for sql.mem.internal.txn.max for max",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.txn.max-p50",
                      "description": "Memory usage per sql transaction for sql.mem.internal.txn.max for p50",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.txn.max-p75",
                      "description": "Memory usage per sql transaction for sql.mem.internal.txn.max for p75",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.txn.max-p90",
                      "description": "Memory usage per sql transaction for sql.mem.internal.txn.max for p90",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.txn.max-p99",
                      "description": "Memory usage per sql transaction for sql.mem.internal.txn.max for p99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.txn.max-p99.9",
                      "description": "Memory usage per sql transaction for sql.mem.internal.txn.max for p99.9",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.txn.max-p99.99",
                      "description": "Memory usage per sql transaction for sql.mem.internal.txn.max for p99.99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.txn.max-p99.999",
                      "description": "Memory usage per sql transaction for sql.mem.internal.txn.max for p99.999",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Txn Current",
                "longName": "SQL Memory Internal Txn Current",
                "collectionName": "sql-memory-internal-txn-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.internal.txn.current",
                      "description": "Current sql transaction memory usage for sql.mem.internal.txn.current",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Session All",
                "longName": "SQL Memory Internal Session All",
                "collectionName": "sql-memory-internal-session-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.internal.session.max-max",
                      "description": "Memory usage per sql session for sql.mem.internal.session.max for max",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.session.max-p50",
                      "description": "Memory usage per sql session for sql.mem.internal.session.max for p50",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.session.max-p75",
                      "description": "Memory usage per sql session for sql.mem.internal.session.max for p75",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.session.max-p90",
                      "description": "Memory usage per sql session for sql.mem.internal.session.max for p90",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.session.max-p99",
                      "description": "Memory usage per sql session for sql.mem.internal.session.max for p99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.session.max-p99.9",
                      "description": "Memory usage per sql session for sql.mem.internal.session.max for p99.9",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.session.max-p99.99",
                      "description": "Memory usage per sql session for sql.mem.internal.session.max for p99.99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.internal.session.max-p99.999",
                      "description": "Memory usage per sql session for sql.mem.internal.session.max for p99.999",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Session Current",
                "longName": "SQL Memory Internal Session Current",
                "collectionName": "sql-memory-internal-session-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.internal.session.current",
                      "description": "Current sql session memory usage for sql.mem.internal.session.current",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              }
            ]
          },
          {
            "name": "Connections",
            "longName": "All SQL Memory Connections",
            "collectionName": "sql-layer-sql-memory-connections-all",
            "level": 2,
            "charts": [
              {
                "name": "All",
                "longName": "SQL Memory Connections All",
                "collectionName": "sql-memory-connections-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.conns.max-max",
                      "description": "Memory usage per sql statement for sql.mem.conns.max for max",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.max-p50",
                      "description": "Memory usage per sql statement for sql.mem.conns.max for p50",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.max-p75",
                      "description": "Memory usage per sql statement for sql.mem.conns.max for p75",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.max-p90",
                      "description": "Memory usage per sql statement for sql.mem.conns.max for p90",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.max-p99",
                      "description": "Memory usage per sql statement for sql.mem.conns.max for p99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.max-p99.9",
                      "description": "Memory usage per sql statement for sql.mem.conns.max for p99.9",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.max-p99.99",
                      "description": "Memory usage per sql statement for sql.mem.conns.max for p99.99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.max-p99.999",
                      "description": "Memory usage per sql statement for sql.mem.conns.max for p99.999",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Current",
                "longName": "SQL Memory Connections Current",
                "collectionName": "sql-memory-connections-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.conns.current",
                      "description": "Current sql statement memory usage for sql.mem.conns.current",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Txn All",
                "longName": "SQL Memory Connections Txn All",
                "collectionName": "sql-memory-connections-txn-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.conns.txn.max-max",
                      "description": "Memory usage per sql transaction for sql.mem.conns.txn.max for max",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.txn.max-p50",
                      "description": "Memory usage per sql transaction for sql.mem.conns.txn.max for p50",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.txn.max-p75",
                      "description": "Memory usage per sql transaction for sql.mem.conns.txn.max for p75",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.txn.max-p90",
                      "description": "Memory usage per sql transaction for sql.mem.conns.txn.max for p90",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.txn.max-p99",
                      "description": "Memory usage per sql transaction for sql.mem.conns.txn.max for p99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.txn.max-p99.9",
                      "description": "Memory usage per sql transaction for sql.mem.conns.txn.max for p99.9",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.txn.max-p99.99",
                      "description": "Memory usage per sql transaction for sql.mem.conns.txn.max for p99.99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.txn.max-p99.999",
                      "description": "Memory usage per sql transaction for sql.mem.conns.txn.max for p99.999",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Txn Current",
                "longName": "SQL Memory Connections Txn Current",
                "collectionName": "sql-memory-connections-txn-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.conns.txn.current",
                      "description": "Current sql transaction memory usage for sql.mem.conns.txn.current",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Session All",
                "longName": "SQL Memory Connections Session All",
                "collectionName": "sql-memory-connections-session-all",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.conns.session.max-max",
                      "description": "Memory usage per sql session for sql.mem.conns.session.max for max",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.session.max-p50",
                      "description": "Memory usage per sql session for sql.mem.conns.session.max for p50",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.session.max-p75",
                      "description": "Memory usage per sql session for sql.mem.conns.session.max for p75",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.session.max-p90",
                      "description": "Memory usage per sql session for sql.mem.conns.session.max for p90",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.session.max-p99",
                      "description": "Memory usage per sql session for sql.mem.conns.session.max for p99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.session.max-p99.9",
                      "description": "Memory usage per sql session for sql.mem.conns.session.max for p99.9",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.session.max-p99.99",
                      "description": "Memory usage per sql session for sql.mem.conns.session.max for p99.99",
                      "location": ""
                    },
                    {
                      "name": "sql.mem.conns.session.max-p99.999",
                      "description": "Memory usage per sql session for sql.mem.conns.session.max for p99.999",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Session Current",
                "longName": "SQL Memory Connections Session Current",
                "collectionName": "sql-memory-connections-session-current",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sql.mem.conns.session.current",
                      "description": "Current sql session memory usage for sql.mem.conns.session.current",
                      "location": ""
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              }
            ]
          }
        ],
        "charts": []
      }
    ]
  },
  {
    "name": "KV Transaction Layer",
    "longName": "KV Transaction Layer",
    "description": "The KV Transaction Layer coordinates concurrent requests as key-value operations. To maintain consistency, this is also where the cluster manages time. <br/><br/><a class=\"catalog-link\" href=\"https://www.cockroachlabs.com/docs/stable/architecture/transaction-layer.html\">Transaction Layer Architecture Docs >></a>",
    "collectionName": "kv-transaction-layer-all",
    "level": 0,
    "subsections": [
      {
        "name": "Transactions",
        "longName": "All Transactions",
        "collectionName": "kv-transaction-layer-transactions-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Aborts",
            "longName": "Transactions Aborts",
            "collectionName": "transactions-aborts",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "txn.aborts",
                  "description": "Number of aborted KV transactions",
                  "location": "kv/txn_coord_sender.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "KV Transactions"
            }
          },
          {
            "name": "Commits",
            "longName": "Transactions Commits",
            "collectionName": "transactions-commits",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "txn.commits",
                  "description": "Number of committed KV transactions (including 1PC)",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.commits1PC",
                  "description": "Number of committed one-phase KV transactions",
                  "location": "kv/txn_coord_sender.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Rate",
              "units": "Count",
              "axisLabel": "KV Transactions"
            }
          },
          {
            "name": "Auto Retries",
            "longName": "Transactions Auto Retries",
            "collectionName": "transactions-auto-retries",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "txn.autoretries",
                  "description": "Number of automatic retries to avoid serializable restarts",
                  "location": "kv/txn_coord_sender.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Retries"
            }
          },
          {
            "name": "Abandoned",
            "longName": "Transactions Abandoned",
            "collectionName": "transactions-abandoned",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "txn.abandons",
                  "description": "Number of abandoned KV transactions",
                  "location": "kv/txn_coord_sender.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "KV Transactions"
            }
          },
          {
            "name": "Durations",
            "longName": "Transactions Durations",
            "collectionName": "transactions-durations",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "txn.durations-max",
                  "description": "KV transaction durations in nanoseconds for max",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.durations-p50",
                  "description": "KV transaction durations in nanoseconds for p50",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.durations-p75",
                  "description": "KV transaction durations in nanoseconds for p75",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.durations-p90",
                  "description": "KV transaction durations in nanoseconds for p90",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.durations-p99",
                  "description": "KV transaction durations in nanoseconds for p99",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.durations-p99.9",
                  "description": "KV transaction durations in nanoseconds for p99.9",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.durations-p99.99",
                  "description": "KV transaction durations in nanoseconds for p99.99",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.durations-p99.999",
                  "description": "KV transaction durations in nanoseconds for p99.999",
                  "location": "kv/txn_coord_sender.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "AVG",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Restarts",
            "longName": "Transactions Restarts",
            "collectionName": "transactions-restarts",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "txn.restarts-max",
                  "description": "Number of restarted KV transactions for max",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.restarts-p50",
                  "description": "Number of restarted KV transactions for p50",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.restarts-p75",
                  "description": "Number of restarted KV transactions for p75",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.restarts-p90",
                  "description": "Number of restarted KV transactions for p90",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.restarts-p99",
                  "description": "Number of restarted KV transactions for p99",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.restarts-p99.9",
                  "description": "Number of restarted KV transactions for p99.9",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.restarts-p99.99",
                  "description": "Number of restarted KV transactions for p99.99",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.restarts-p99.999",
                  "description": "Number of restarted KV transactions for p99.999",
                  "location": "kv/txn_coord_sender.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "AVG",
              "rate": "Non-negative rate",
              "units": "Count",
              "axisLabel": "KV Transactions"
            }
          },
          {
            "name": "Restart Cause Mix",
            "longName": "Transactions Restart Cause Mix",
            "collectionName": "transactions-restart-cause-mix",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "txn.restarts.writetooold",
                  "description": "Number of restarts due to a concurrent writer committing first",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.restarts.deleterange",
                  "description": "Number of restarts due to a forwarded commit timestamp and a DeleteRange command",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.restarts.serializable",
                  "description": "Number of restarts due to a forwarded commit timestamp and isolation=SERIALIZABLE",
                  "location": "kv/txn_coord_sender.go"
                },
                {
                  "name": "txn.restarts.possiblereplay",
                  "description": "Number of restarts due to possible replays of command batches at the storage layer",
                  "location": "kv/txn_coord_sender.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Restarted Transactions"
            }
          }
        ]
      },
      {
        "name": "Requests",
        "longName": "All Requests",
        "collectionName": "kv-transaction-layer-requests-all",
        "level": 1,
        "subsections": [
          {
            "name": "Overview",
            "longName": "All Requests Overview",
            "collectionName": "kv-transaction-layer-requests-overview-all",
            "level": 2,
            "charts": [
              {
                "name": "Latency",
                "longName": "Requests Overview Latency",
                "collectionName": "requests-overview-latency",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "exec.latency-max",
                      "description": "Latency in nanoseconds of batch KV requests executed on this node for max",
                      "location": "server/node.go"
                    },
                    {
                      "name": "exec.latency-p50",
                      "description": "Latency in nanoseconds of batch KV requests executed on this node for p50",
                      "location": "server/node.go"
                    },
                    {
                      "name": "exec.latency-p75",
                      "description": "Latency in nanoseconds of batch KV requests executed on this node for p75",
                      "location": "server/node.go"
                    },
                    {
                      "name": "exec.latency-p90",
                      "description": "Latency in nanoseconds of batch KV requests executed on this node for p90",
                      "location": "server/node.go"
                    },
                    {
                      "name": "exec.latency-p99",
                      "description": "Latency in nanoseconds of batch KV requests executed on this node for p99",
                      "location": "server/node.go"
                    },
                    {
                      "name": "exec.latency-p99.9",
                      "description": "Latency in nanoseconds of batch KV requests executed on this node for p99.9",
                      "location": "server/node.go"
                    },
                    {
                      "name": "exec.latency-p99.99",
                      "description": "Latency in nanoseconds of batch KV requests executed on this node for p99.99",
                      "location": "server/node.go"
                    },
                    {
                      "name": "exec.latency-p99.999",
                      "description": "Latency in nanoseconds of batch KV requests executed on this node for p99.999",
                      "location": "server/node.go"
                    }
                  ],
                  "downsampler": "AVG",
                  "aggregator": "AVG",
                  "rate": "Normal",
                  "units": "Duration",
                  "axisLabel": "Time"
                }
              },
              {
                "name": "Success",
                "longName": "Requests Overview Success",
                "collectionName": "requests-overview-success",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "exec.success",
                      "description": "Number of batch KV requests executed successfully on this node",
                      "location": "server/node.go"
                    },
                    {
                      "name": "exec.error",
                      "description": "Number of batch KV requests that failed to execute on this node",
                      "location": "server/node.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Batch KV Requests"
                }
              }
            ]
          },
          {
            "name": "Slow",
            "longName": "All Requests Slow",
            "collectionName": "kv-transaction-layer-requests-slow-all",
            "level": 2,
            "charts": [
              {
                "name": "Stuck in Command Queue",
                "longName": "Requests Slow Stuck in Command Queue",
                "collectionName": "requests-slow-stuck-in-command-queue",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "requests.slow.commandqueue",
                      "description": "Number of requests that have been stuck for a long time in the command queue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Requests"
                }
              },
              {
                "name": "Stuck Acquiring Lease",
                "longName": "Requests Slow Stuck Acquiring Lease",
                "collectionName": "requests-slow-stuck-acquiring-lease",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "requests.slow.commandqueue",
                      "description": "Number of requests that have been stuck for a long time in the command queue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Requests"
                }
              },
              {
                "name": "Stuck in Raft",
                "longName": "Requests Slow Stuck in Raft",
                "collectionName": "requests-slow-stuck-in-raft",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "requests.slow.raft",
                      "description": "Number of requests that have been stuck for a long time in raft",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Requests"
                }
              }
            ]
          },
          {
            "name": "Backpressure",
            "longName": "All Requests Backpressure",
            "collectionName": "kv-transaction-layer-requests-backpressure-all",
            "level": 2,
            "charts": [
              {
                "name": "Writes Waiting on Range Split",
                "longName": "Requests Backpressure Writes Waiting on Range Split",
                "collectionName": "requests-backpressure-writes-waiting-on-range-split",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "requests.backpressure.split",
                      "description": "Number of backpressured writes waiting on a Range split",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Writes"
                }
              }
            ]
          }
        ],
        "charts": []
      },
      {
        "name": "Garbage Collection (GC)",
        "longName": "All Garbage Collection (GC)",
        "collectionName": "kv-transaction-layer-garbage-collection-gc-all",
        "level": 1,
        "subsections": [
          {
            "name": "Overview",
            "longName": "All Garbage Collection (GC) Overview",
            "collectionName": "kv-transaction-layer-garbage-collection-gc-overview-all",
            "level": 2,
            "charts": [
              {
                "name": "Total GC Runs",
                "longName": "Garbage Collection (GC) Overview Total GC Runs",
                "collectionName": "garbage-collection-gc-overview-total-gc-runs",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sys.gc.count",
                      "description": "Total number of GC runs",
                      "location": "server/status/runtime.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "GC Runs"
                }
              },
              {
                "name": "Total GC Pause (NS)",
                "longName": "Garbage Collection (GC) Overview Total GC Pause (NS)",
                "collectionName": "garbage-collection-gc-overview-total-gc-pause-ns",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sys.gc.pause.ns",
                      "description": "Total GC pause in nanoseconds",
                      "location": "server/status/runtime.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Duration",
                  "axisLabel": "Time"
                }
              },
              {
                "name": "Current GC Pause Percent",
                "longName": "Garbage Collection (GC) Overview Current GC Pause Percent",
                "collectionName": "garbage-collection-gc-overview-current-gc-pause-percent",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "sys.gc.pause.percent",
                      "description": "Current GC pause percentage",
                      "location": "server/status/runtime.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Percent"
                }
              }
            ]
          },
          {
            "name": "Keys",
            "longName": "All Garbage Collection (GC) Keys",
            "collectionName": "kv-transaction-layer-garbage-collection-gc-keys-all",
            "level": 2,
            "charts": [
              {
                "name": "Keys with GC'able Data",
                "longName": "Garbage Collection (GC) Keys Keys with GC'able Data",
                "collectionName": "garbage-collection-gc-keys-keys-with-gcable-data",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.gc.info.numkeysaffected",
                      "description": "Number of keys with GC'able data",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Keys"
                }
              },
              {
                "name": "Old Intents",
                "longName": "Garbage Collection (GC) Keys Old Intents",
                "collectionName": "garbage-collection-gc-keys-old-intents",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.gc.info.intentsconsidered",
                      "description": "Number of 'old' intents",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Intents"
                }
              },
              {
                "name": "Distinct Txns",
                "longName": "Garbage Collection (GC) Keys Distinct Txns",
                "collectionName": "garbage-collection-gc-keys-distinct-txns",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.gc.info.intenttxns",
                      "description": "Number of associated distinct transactions",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Txns"
                }
              },
              {
                "name": "Enteries in Txn Spans",
                "longName": "Garbage Collection (GC) Keys Enteries in Txn Spans",
                "collectionName": "garbage-collection-gc-keys-enteries-in-txn-spans",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.gc.info.transactionspanscanned",
                      "description": "Number of entries in transaction spans scanned from the engine",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Entries"
                }
              },
              {
                "name": "Txn Relationship",
                "longName": "Garbage Collection (GC) Keys Txn Relationship",
                "collectionName": "garbage-collection-gc-keys-txn-relationship",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.gc.info.transactionspangcaborted",
                      "description": "Number of GC'able entries corresponding to aborted txns",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "queue.gc.info.transactionspangccommitted",
                      "description": "Number of GC'able entries corresponding to committed txns",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "queue.gc.info.transactionspangcpending",
                      "description": "Number of GC'able entries corresponding to pending txns",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Entries"
                }
              },
              {
                "name": "AbortSpan",
                "longName": "Garbage Collection (GC) Keys AbortSpan",
                "collectionName": "garbage-collection-gc-keys-abortspan",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.gc.info.abortspanscanned",
                      "description": "Number of transactions present in the AbortSpan scanned from the engine",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "queue.gc.info.abortspanconsidered",
                      "description": "Number of AbortSpan entries old enough to be considered for removal",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "queue.gc.info.abortspangcnum",
                      "description": "Number of AbortSpan entries fit for removal",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Entries"
                }
              },
              {
                "name": "Pushes",
                "longName": "Garbage Collection (GC) Keys Pushes",
                "collectionName": "garbage-collection-gc-keys-pushes",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.gc.info.pushtxn",
                      "description": "Number of attempted pushes",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Pushes"
                }
              },
              {
                "name": "Intents",
                "longName": "Garbage Collection (GC) Keys Intents",
                "collectionName": "garbage-collection-gc-keys-intents",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.gc.info.resolvetotal",
                      "description": "Number of attempted intent resolutions",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "queue.gc.info.resolvesuccess",
                      "description": "Number of successful intent resolutions",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Intent Resolutions"
                }
              }
            ]
          }
        ],
        "charts": []
      },
      {
        "name": "Storage",
        "longName": "All Storage",
        "collectionName": "kv-transaction-layer-storage-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Size",
            "longName": "Storage Size",
            "collectionName": "storage-size",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "livebytes",
                  "description": "Number of bytes of live data (keys plus values)",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "keybytes",
                  "description": "Number of bytes taken up by keys",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "valbytes",
                  "description": "Number of bytes taken up by values",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "totalbytes",
                  "description": "Total number of bytes taken up by keys and values including non-live data",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "intentbytes",
                  "description": "Number of bytes in intent KV pairs",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "sysbytes",
                  "description": "Number of bytes in system KV pairs",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Bytes",
              "axisLabel": "Size"
            }
          },
          {
            "name": "Counts",
            "longName": "Storage Counts",
            "collectionName": "storage-counts",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "livecount",
                  "description": "Count of live keys",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "keycount",
                  "description": "Count of all keys",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "valcount",
                  "description": "Count of all values",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "intentcount",
                  "description": "Count of intent keys",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "syscount",
                  "description": "Count of system KV pairs",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Keys"
            }
          },
          {
            "name": "Cumultative Intent Age",
            "longName": "Storage Cumultative Intent Age",
            "collectionName": "storage-cumultative-intent-age",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "intentage",
                  "description": "Cumulative age of intents in seconds",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Cumultative Age of Non-Live Data",
            "longName": "Storage Cumultative Age of Non-Live Data",
            "collectionName": "storage-cumultative-age-of-non-live-data",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "gcbytesage",
                  "description": "Cumulative age of non-live data in seconds",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Metric Update Frequency",
            "longName": "Storage Metric Update Frequency",
            "collectionName": "storage-metric-update-frequency",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "lastupdatenanos",
                  "description": "Time in nanoseconds since Unix epoch at which bytes/keys/intents metrics were last updated",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      },
      {
        "name": "Timestamp Cache",
        "longName": "All Timestamp Cache",
        "collectionName": "kv-transaction-layer-timestamp-cache-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Page Counts",
            "longName": "Timestamp Cache Page Counts",
            "collectionName": "timestamp-cache-page-counts",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "tscache.skl.read.pages",
                  "description": "Number of pages in the read timestamp cache",
                  "location": "storage/tscache/metrics.go"
                },
                {
                  "name": "tscache.skl.write.pages",
                  "description": "Number of pages in the write timestamp cache",
                  "location": "storage/tscache/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Pages"
            }
          },
          {
            "name": "Page Rotations",
            "longName": "Timestamp Cache Page Rotations",
            "collectionName": "timestamp-cache-page-rotations",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "tscache.skl.read.rotations",
                  "description": "Number of page rotations in the read timestamp cache",
                  "location": "storage/tscache/metrics.go"
                },
                {
                  "name": "tscache.skl.write.rotations",
                  "description": "Number of page rotations in the write timestamp cache",
                  "location": "storage/tscache/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Page Rotations"
            }
          }
        ]
      },
      {
        "name": "Clocks",
        "longName": "All Clocks",
        "collectionName": "kv-transaction-layer-clocks-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Offsets",
            "longName": "Clocks Offsets",
            "collectionName": "clocks-offsets",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "clock-offset.meannanos",
                  "description": "Mean clock offset with other nodes in nanoseconds",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "clock-offset.stddevnanos",
                  "description": "Stdddev clock offset with other nodes in nanoseconds",
                  "location": "rpc/clock_offset.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "AVG",
              "rate": "Non-negative rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Roundtrip Latency",
            "longName": "Clocks Roundtrip Latency",
            "collectionName": "clocks-roundtrip-latency",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "round-trip-latency-max",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for max",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p50",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p50",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p75",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p75",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p90",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p90",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p99",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p99",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p99.9",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p99.9",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p99.99",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p99.99",
                  "location": "rpc/clock_offset.go"
                },
                {
                  "name": "round-trip-latency-p99.999",
                  "description": "Distribution of round-trip latencies with other nodes in nanoseconds for p99.999",
                  "location": "rpc/clock_offset.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      }
    ]
  },
  {
    "name": "Distribution Layer",
    "longName": "Distribution Layer",
    "description": "The Distribution Layer provides a unified view of your cluster’s data, which are actually broken up into many key-value ranges. <br/><br/><a class=\"catalog-link\" href=\"https://www.cockroachlabs.com/docs/stable/architecture/distribution-layer.html\"> Distribution Layer Architecture Docs >></a>",
    "collectionName": "distribution-layer-all",
    "level": 0,
    "subsections": [
      {
        "name": "Gossip",
        "longName": "All Gossip",
        "collectionName": "distribution-layer-gossip-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Connections",
            "longName": "Gossip Connections",
            "collectionName": "gossip-connections",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "gossip.connections.incoming",
                  "description": "Number of active incoming gossip connections",
                  "location": "gossip/gossip.go"
                },
                {
                  "name": "gossip.connections.outgoing",
                  "description": "Number of active outgoing gossip connections",
                  "location": "gossip/gossip.go"
                },
                {
                  "name": "gossip.connections.refused",
                  "description": "Number of refused incoming gossip connections",
                  "location": "gossip/gossip.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Connections"
            }
          },
          {
            "name": "Infos",
            "longName": "Gossip Infos",
            "collectionName": "gossip-infos",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "gossip.infos.sent",
                  "description": "Number of sent gossip Info objects",
                  "location": "gossip/gossip.go"
                },
                {
                  "name": "gossip.infos.received",
                  "description": "Number of received gossip Info objects",
                  "location": "gossip/gossip.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Count",
              "axisLabel": "Infos"
            }
          },
          {
            "name": "Bytes",
            "longName": "Gossip Bytes",
            "collectionName": "gossip-bytes",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "gossip.bytes.sent",
                  "description": "Number of sent gossip bytes",
                  "location": "gossip/gossip.go"
                },
                {
                  "name": "gossip.bytes.received",
                  "description": "Number of received gossip bytes",
                  "location": "gossip/gossip.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Bytes",
              "axisLabel": "Size"
            }
          }
        ]
      },
      {
        "name": "DistSender",
        "longName": "All DistSender",
        "collectionName": "distribution-layer-distsender-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Batches",
            "longName": "DistSender Batches",
            "collectionName": "distsender-batches",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "distsender.batches",
                  "description": "Number of batches processed",
                  "location": "kv/dist_sender.go"
                },
                {
                  "name": "distsender.batches.partial",
                  "description": "Number of partial batches processed",
                  "location": "kv/dist_sender.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Count",
              "axisLabel": "Batches"
            }
          },
          {
            "name": "RPCs",
            "longName": "DistSender RPCs",
            "collectionName": "distsender-rpcs",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "distsender.rpc.sent",
                  "description": "Number of RPCs sent",
                  "location": "kv/dist_sender.go"
                },
                {
                  "name": "distsender.rpc.sent.local",
                  "description": "Number of local RPCs sent",
                  "location": "kv/dist_sender.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Count",
              "axisLabel": "RPCs"
            }
          },
          {
            "name": "Errors",
            "longName": "DistSender Errors",
            "collectionName": "distsender-errors",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "distsender.rpc.sent.nextreplicaerror",
                  "description": "Number of RPCs sent due to per-replica errors",
                  "location": "kv/dist_sender.go"
                },
                {
                  "name": "distsender.errors.notleaseholder",
                  "description": "Number of NotLeaseHolderErrors encountered",
                  "location": "kv/dist_sender.go"
                },
                {
                  "name": "requests.slow.distsender",
                  "description": "Number of requests that have been stuck for a long time in the dist sender",
                  "location": "kv/dist_sender.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Rate",
              "units": "Count",
              "axisLabel": "Errors"
            }
          }
        ]
      },
      {
        "name": "Ranges",
        "longName": "All Ranges",
        "collectionName": "distribution-layer-ranges-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Overview",
            "longName": "Ranges Overview",
            "collectionName": "ranges-overview",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "ranges",
                  "description": "Number of ranges",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Ranges"
            }
          },
          {
            "name": "Add, Split, Remove",
            "longName": "Ranges Add, Split, Remove",
            "collectionName": "ranges-add-split-remove",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "range.splits",
                  "description": "Number of range splits",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "range.adds",
                  "description": "Number of range additions",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "range.removes",
                  "description": "Number of range removals",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Range Ops"
            }
          },
          {
            "name": "Snapshots",
            "longName": "Ranges Snapshots",
            "collectionName": "ranges-snapshots",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "range.snapshots.generated",
                  "description": "Number of generated snapshots",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "range.snapshots.normal-applied",
                  "description": "Number of applied snapshots",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "range.snapshots.preemptive-applied",
                  "description": "Number of applied pre-emptive snapshots",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Snapshots"
            }
          }
        ]
      },
      {
        "name": "Split Queue",
        "longName": "All Split Queue",
        "collectionName": "distribution-layer-split-queue-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Count",
            "longName": "Split Queue Count",
            "collectionName": "split-queue-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.split.process.success",
                  "description": "Number of replicas successfully processed by the split queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.split.process.failure",
                  "description": "Number of replicas which failed processing in the split queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.split.pending",
                  "description": "Number of pending replicas in the split queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replicas"
            }
          },
          {
            "name": "Time Spent",
            "longName": "Split Queue Time Spent",
            "collectionName": "split-queue-time-spent",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.split.processingnanos",
                  "description": "Nanoseconds spent processing replicas in the split queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      }
    ]
  },
  {
    "name": "Replication Layer",
    "longName": "Replication Layer",
    "description": "The Replication Layer maintains consistency between copies of ranges (known as replicas) through our consensus algorithm, Raft. <br/><br/><a class=\"catalog-link\" href=\"https://www.cockroachlabs.com/docs/stable/architecture/replication-layer.html\"> Replication Layer Architecture Docs >></a>",
    "collectionName": "replication-layer-all",
    "level": 0,
    "subsections": [
      {
        "name": "Raft",
        "longName": "All Raft",
        "collectionName": "replication-layer-raft-all",
        "level": 1,
        "subsections": [
          {
            "name": "Overview",
            "longName": "All Raft Overview",
            "collectionName": "replication-layer-raft-overview-all",
            "level": 2,
            "charts": [
              {
                "name": "Keys/Sec Avg.",
                "longName": "Raft Overview Keys/Sec Avg.",
                "collectionName": "raft-overview-keys-sec-avg",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "rebalancing.writespersecond",
                      "description": "Number of keys written (i.e. applied by raft) per second to the store, averaged over a large time period as used in rebalancing decisions",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Keys/Sec"
                }
              },
              {
                "name": "Leaders",
                "longName": "Raft Overview Leaders",
                "collectionName": "raft-overview-leaders",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "replicas.leaders",
                      "description": "Number of raft leaders",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Raft Leaders"
                }
              },
              {
                "name": "Leader Transfers",
                "longName": "Raft Overview Leader Transfers",
                "collectionName": "raft-overview-leader-transfers",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "range.raftleadertransfers",
                      "description": "Number of raft leader transfers",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Leader Transfers"
                }
              },
              {
                "name": "Ticks Queued",
                "longName": "Raft Overview Ticks Queued",
                "collectionName": "raft-overview-ticks-queued",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.ticks",
                      "description": "Number of Raft ticks queued",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Ticks"
                }
              },
              {
                "name": "Working vs. Ticking TIme",
                "longName": "Raft Overview Working vs. Ticking TIme",
                "collectionName": "raft-overview-working-vs-ticking-time",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.process.workingnanos",
                      "description": "Nanoseconds spent in store.processRaft() working",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.tickingnanos",
                      "description": "Nanoseconds spent in store.processRaft() processing replica.Tick()",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "AVG",
                  "aggregator": "AVG",
                  "rate": "Rate",
                  "units": "Duration",
                  "axisLabel": "Time"
                }
              },
              {
                "name": "Commands Count",
                "longName": "Raft Overview Commands Count",
                "collectionName": "raft-overview-commands-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.commandsapplied",
                      "description": "Count of Raft commands applied",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Commands"
                }
              },
              {
                "name": "Enqueued",
                "longName": "Raft Overview Enqueued",
                "collectionName": "raft-overview-enqueued",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.enqueued.pending",
                      "description": "Number of pending outgoing messages in the Raft Transport queue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "Stuck Request Count",
                "longName": "Raft Overview Stuck Request Count",
                "collectionName": "raft-overview-stuck-request-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "requests.slow.raft",
                      "description": "Number of requests that have been stuck for a long time in raft",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Requests"
                }
              }
            ]
          },
          {
            "name": "Latency",
            "longName": "All Raft Latency",
            "collectionName": "replication-layer-raft-latency-all",
            "level": 2,
            "charts": [
              {
                "name": "Log Commit",
                "longName": "Raft Latency Log Commit",
                "collectionName": "raft-latency-log-commit",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.process.logcommit.latency-max",
                      "description": "Latency histogram in nanoseconds for committing Raft log entries for max",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.logcommit.latency-p50",
                      "description": "Latency histogram in nanoseconds for committing Raft log entries for p50",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.logcommit.latency-p75",
                      "description": "Latency histogram in nanoseconds for committing Raft log entries for p75",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.logcommit.latency-p90",
                      "description": "Latency histogram in nanoseconds for committing Raft log entries for p90",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.logcommit.latency-p99",
                      "description": "Latency histogram in nanoseconds for committing Raft log entries for p99",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.logcommit.latency-p99.9",
                      "description": "Latency histogram in nanoseconds for committing Raft log entries for p99.9",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.logcommit.latency-p99.99",
                      "description": "Latency histogram in nanoseconds for committing Raft log entries for p99.99",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.logcommit.latency-p99.999",
                      "description": "Latency histogram in nanoseconds for committing Raft log entries for p99.999",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Time"
                }
              },
              {
                "name": "Command Commit",
                "longName": "Raft Latency Command Commit",
                "collectionName": "raft-latency-command-commit",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.process.commandcommit.latency-max",
                      "description": "Latency histogram in nanoseconds for committing Raft commands for max",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.commandcommit.latency-p50",
                      "description": "Latency histogram in nanoseconds for committing Raft commands for p50",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.commandcommit.latency-p75",
                      "description": "Latency histogram in nanoseconds for committing Raft commands for p75",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.commandcommit.latency-p90",
                      "description": "Latency histogram in nanoseconds for committing Raft commands for p90",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.commandcommit.latency-p99",
                      "description": "Latency histogram in nanoseconds for committing Raft commands for p99",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.commandcommit.latency-p99.9",
                      "description": "Latency histogram in nanoseconds for committing Raft commands for p99.9",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.commandcommit.latency-p99.99",
                      "description": "Latency histogram in nanoseconds for committing Raft commands for p99.99",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "raft.process.commandcommit.latency-p99.999",
                      "description": "Latency histogram in nanoseconds for committing Raft commands for p99.999",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Time"
                }
              }
            ]
          },
          {
            "name": "Received",
            "longName": "All Raft Received",
            "collectionName": "replication-layer-raft-received-all",
            "level": 2,
            "charts": [
              {
                "name": "MsgProp Count",
                "longName": "Raft Received MsgProp Count",
                "collectionName": "raft-received-msgprop-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.prop",
                      "description": "Number of MsgProp messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgApp Count",
                "longName": "Raft Received MsgApp Count",
                "collectionName": "raft-received-msgapp-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.app",
                      "description": "Number of MsgApp messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgAppResp Count",
                "longName": "Raft Received MsgAppResp Count",
                "collectionName": "raft-received-msgappresp-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.appresp",
                      "description": "Number of MsgAppResp messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgVote Count",
                "longName": "Raft Received MsgVote Count",
                "collectionName": "raft-received-msgvote-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.vote",
                      "description": "Number of MsgVote messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgVoteResp Count",
                "longName": "Raft Received MsgVoteResp Count",
                "collectionName": "raft-received-msgvoteresp-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.voteresp",
                      "description": "Number of MsgVoteResp messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgPreVote Count",
                "longName": "Raft Received MsgPreVote Count",
                "collectionName": "raft-received-msgprevote-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.prevote",
                      "description": "Number of MsgPreVote messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgPreVoteResp Count",
                "longName": "Raft Received MsgPreVoteResp Count",
                "collectionName": "raft-received-msgprevoteresp-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.prevoteresp",
                      "description": "Number of MsgPreVoteResp messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgSnap Count",
                "longName": "Raft Received MsgSnap Count",
                "collectionName": "raft-received-msgsnap-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.snap",
                      "description": "Number of MsgSnap messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "Heartbeat Count",
                "longName": "Raft Received Heartbeat Count",
                "collectionName": "raft-received-heartbeat-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.heartbeat",
                      "description": "Number of (coalesced, if enabled) MsgHeartbeat messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgHeartbeatResp Count",
                "longName": "Raft Received MsgHeartbeatResp Count",
                "collectionName": "raft-received-msgheartbeatresp-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.heartbeatresp",
                      "description": "Number of (coalesced, if enabled) MsgHeartbeatResp messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgTransferLeader Count",
                "longName": "Raft Received MsgTransferLeader Count",
                "collectionName": "raft-received-msgtransferleader-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.transferleader",
                      "description": "Number of MsgTransferLeader messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgTimeoutNow Count",
                "longName": "Raft Received MsgTimeoutNow Count",
                "collectionName": "raft-received-msgtimeoutnow-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.timeoutnow",
                      "description": "Number of MsgTimeoutNow messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "Dropped",
                "longName": "Raft Received Dropped",
                "collectionName": "raft-received-dropped",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.dropped",
                      "description": "Number of dropped incoming Raft messages",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              }
            ]
          },
          {
            "name": "Heartbeats",
            "longName": "All Raft Heartbeats",
            "collectionName": "replication-layer-raft-heartbeats-all",
            "level": 2,
            "charts": [
              {
                "name": "MsgHeartbeatResp Count",
                "longName": "Raft Heartbeats MsgHeartbeatResp Count",
                "collectionName": "raft-heartbeats-msgheartbeatresp-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.heartbeatresp",
                      "description": "Number of (coalesced, if enabled) MsgHeartbeatResp messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "MsgTransferLeader Count",
                "longName": "Raft Heartbeats MsgTransferLeader Count",
                "collectionName": "raft-heartbeats-msgtransferleader-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.rcvd.transferleader",
                      "description": "Number of MsgTransferLeader messages received by this store",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              },
              {
                "name": "Pending",
                "longName": "Raft Heartbeats Pending",
                "collectionName": "raft-heartbeats-pending",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raft.heartbeats.pending",
                      "description": "Number of pending heartbeats and responses waiting to be coalesced",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Messages"
                }
              }
            ]
          },
          {
            "name": "Log",
            "longName": "All Raft Log",
            "collectionName": "replication-layer-raft-log-all",
            "level": 2,
            "charts": [
              {
                "name": "Followers Behind By...",
                "longName": "Raft Log Followers Behind By...",
                "collectionName": "raft-log-followers-behind-by",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raftlog.behind",
                      "description": "Number of Raft log entries followers on other stores are behind",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Log Entries"
                }
              },
              {
                "name": "Entries Truncated",
                "longName": "Raft Log Entries Truncated",
                "collectionName": "raft-log-entries-truncated",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "raftlog.truncated",
                      "description": "Number of Raft log entries truncated",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "AVG",
                  "aggregator": "AVG",
                  "rate": "Rate",
                  "units": "Count",
                  "axisLabel": "Log Entries"
                }
              }
            ]
          },
          {
            "name": "Queues",
            "longName": "All Raft Queues",
            "collectionName": "replication-layer-raft-queues-all",
            "level": 2,
            "charts": [
              {
                "name": "Log Status",
                "longName": "Raft Queues Log Status",
                "collectionName": "raft-queues-log-status",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.raftlog.process.success",
                      "description": "Number of replicas successfully processed by the Raft log queue",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "queue.raftlog.process.failure",
                      "description": "Number of replicas which failed processing in the Raft log queue",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "queue.raftlog.pending",
                      "description": "Number of pending replicas in the Raft log queue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Replicas"
                }
              },
              {
                "name": "Log Processing Time Spent",
                "longName": "Raft Queues Log Processing Time Spent",
                "collectionName": "raft-queues-log-processing-time-spent",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.raftlog.processingnanos",
                      "description": "Nanoseconds spent processing replicas in the Raft log queue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "AVG",
                  "aggregator": "AVG",
                  "rate": "Rate",
                  "units": "Duration",
                  "axisLabel": "Time"
                }
              },
              {
                "name": "Snapshot Status",
                "longName": "Raft Queues Snapshot Status",
                "collectionName": "raft-queues-snapshot-status",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.raftsnapshot.process.success",
                      "description": "Number of replicas successfully processed by the Raft repair queue",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "queue.raftsnapshot.process.failure",
                      "description": "Number of replicas which failed processing in the Raft repair queue",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "queue.raftsnapshot.pending",
                      "description": "Number of pending replicas in the Raft repair queue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Replicas"
                }
              },
              {
                "name": "Snapshot Processing Time Spent",
                "longName": "Raft Queues Snapshot Processing Time Spent",
                "collectionName": "raft-queues-snapshot-processing-time-spent",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "queue.raftsnapshot.processingnanos",
                      "description": "Nanoseconds spent processing replicas in the Raft repair queue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "AVG",
                  "aggregator": "AVG",
                  "rate": "Rate",
                  "units": "Duration",
                  "axisLabel": "Time"
                }
              }
            ]
          }
        ],
        "charts": []
      },
      {
        "name": "Replicas",
        "longName": "All Replicas",
        "collectionName": "replication-layer-replicas-all",
        "level": 1,
        "subsections": [
          {
            "name": "Overview",
            "longName": "All Replicas Overview",
            "collectionName": "replication-layer-replicas-overview-all",
            "level": 2,
            "charts": [
              {
                "name": "Count",
                "longName": "Replicas Overview Count",
                "collectionName": "replicas-overview-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "replicas",
                      "description": "Number of replicas",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "replicas.reserved",
                      "description": "Number of replicas reserved for snapshots",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "replicas.quiescent",
                      "description": "Number of quiesced replicas",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Replicas"
                }
              },
              {
                "name": "Leaseholders",
                "longName": "Replicas Overview Leaseholders",
                "collectionName": "replicas-overview-leaseholders",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "replicas.leaseholders",
                      "description": "Number of lease holders",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Replicas"
                }
              }
            ]
          },
          {
            "name": "Command Queue",
            "longName": "All Replicas Command Queue",
            "collectionName": "replication-layer-replicas-command-queue-all",
            "level": 2,
            "charts": [
              {
                "name": "Maxes",
                "longName": "Replicas Command Queue Maxes",
                "collectionName": "replicas-command-queue-maxes",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "replicas.commandqueue.maxsize",
                      "description": "Largest number of commands in any CommandQueue",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "replicas.commandqueue.maxwritecount",
                      "description": "Largest number of read-write commands in any CommandQueue",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "replicas.commandqueue.maxreadcount",
                      "description": "Largest number of read-only commands in any CommandQueue",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "replicas.commandqueue.maxtreesize",
                      "description": "Largest number of intervals in any CommandQueue's interval tree",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "replicas.commandqueue.maxoverlaps",
                      "description": "Largest number of overlapping commands seen when adding to any CommandQueue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Commands"
                }
              },
              {
                "name": "Counts",
                "longName": "Replicas Command Queue Counts",
                "collectionName": "replicas-command-queue-counts",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "replicas.commandqueue.combinedqueuesize",
                      "description": "Number of commands in all CommandQueues combined",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "replicas.commandqueue.combinedwritecount",
                      "description": "Number of read-write commands in all CommandQueues combined",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "replicas.commandqueue.combinedreadcount",
                      "description": "Number of read-only commands in all CommandQueues combined",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Commands"
                }
              },
              {
                "name": "Stuck Request Count",
                "longName": "Replicas Command Queue Stuck Request Count",
                "collectionName": "replicas-command-queue-stuck-request-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "requests.slow.commandqueue",
                      "description": "Number of requests that have been stuck for a long time in the command queue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Requests"
                }
              }
            ]
          }
        ],
        "charts": []
      },
      {
        "name": "Leases",
        "longName": "All Leases",
        "collectionName": "replication-layer-leases-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Total",
            "longName": "Leases Total",
            "collectionName": "leases-total",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "replicas.leaders_not_leaseholders",
                  "description": "Number of replicas that are Raft leaders whose range lease is held by another store",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "replicas.leaseholders",
                  "description": "Number of lease holders",
                  "location": ""
                },
                {
                  "name": "leases.expiration",
                  "description": "Number of replica leaseholders using expiration-based leases",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "leases.epoch",
                  "description": "Number of replica leaseholders using epoch-based leases",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replicas"
            }
          },
          {
            "name": "Succcess Rate",
            "longName": "Leases Succcess Rate",
            "collectionName": "leases-succcess-rate",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "leases.success",
                  "description": "Number of successful lease requests",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "leases.error",
                  "description": "Number of failed lease requests",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Lease Requests"
            }
          },
          {
            "name": "Transfer Success Rate",
            "longName": "Leases Transfer Success Rate",
            "collectionName": "leases-transfer-success-rate",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "leases.transfers.success",
                  "description": "Number of successful lease transfers",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "leases.transfers.error",
                  "description": "Number of failed lease transfers",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Lease Transfers"
            }
          },
          {
            "name": "Stuck Acquisition Count",
            "longName": "Leases Stuck Acquisition Count",
            "collectionName": "leases-stuck-acquisition-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "requests.slow.lease",
                  "description": "Number of requests that have been stuck for a long time acquiring a lease",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Requests"
            }
          }
        ]
      },
      {
        "name": "Ranges",
        "longName": "All Ranges",
        "collectionName": "replication-layer-ranges-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Overview",
            "longName": "Ranges Overview",
            "collectionName": "ranges-overview",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "ranges",
                  "description": "Number of ranges",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "ranges.unavailable",
                  "description": "Number of ranges with fewer live replicas than needed for quorum",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "ranges.underreplicated",
                  "description": "Number of ranges with fewer live replicas than the replication target",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Ranges"
            }
          },
          {
            "name": "Add, Split, Remove",
            "longName": "Ranges Add, Split, Remove",
            "collectionName": "ranges-add-split-remove",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "range.splits",
                  "description": "Number of range splits",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "range.adds",
                  "description": "Number of range additions",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "range.removes",
                  "description": "Number of range removals",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Range Ops"
            }
          },
          {
            "name": "Snapshots",
            "longName": "Ranges Snapshots",
            "collectionName": "ranges-snapshots",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "range.snapshots.generated",
                  "description": "Number of generated snapshots",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "range.snapshots.normal-applied",
                  "description": "Number of applied snapshots",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "range.snapshots.preemptive-applied",
                  "description": "Number of applied pre-emptive snapshots",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Snapshots"
            }
          },
          {
            "name": "Raft Leader Transfers",
            "longName": "Ranges Raft Leader Transfers",
            "collectionName": "ranges-raft-leader-transfers",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "range.raftleadertransfers",
                  "description": "Number of raft leader transfers",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Leader Transfers"
            }
          },
          {
            "name": "Backpressued Writes Waiting on Split",
            "longName": "Ranges Backpressued Writes Waiting on Split",
            "collectionName": "ranges-backpressued-writes-waiting-on-split",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "requests.backpressure.split",
                  "description": "Number of backpressured writes waiting on a Range split",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Writes"
            }
          }
        ]
      },
      {
        "name": "Garbage Collection",
        "longName": "All Garbage Collection",
        "collectionName": "replication-layer-garbage-collection-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Queue Success",
            "longName": "Garbage Collection Queue Success",
            "collectionName": "garbage-collection-queue-success",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.gc.process.success",
                  "description": "Number of replicas successfully processed by the GC queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.gc.process.failure",
                  "description": "Number of replicas which failed processing in the GC queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.gc.pending",
                  "description": "Number of pending replicas in the GC queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replicas"
            }
          },
          {
            "name": "Queue Time",
            "longName": "Garbage Collection Queue Time",
            "collectionName": "garbage-collection-queue-time",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.gc.processingnanos",
                  "description": "Nanoseconds spent processing replicas in the GC queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      },
      {
        "name": "Consistency Checker Queue",
        "longName": "All Consistency Checker Queue",
        "collectionName": "replication-layer-consistency-checker-queue-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Count",
            "longName": "Consistency Checker Queue Count",
            "collectionName": "consistency-checker-queue-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.consistency.process.success",
                  "description": "Number of replicas successfully processed by the consistency checker queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.consistency.process.failure",
                  "description": "Number of replicas which failed processing in the consistency checker queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.consistency.pending",
                  "description": "Number of pending replicas in the consistency checker queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replicas"
            }
          },
          {
            "name": "Time Spent",
            "longName": "Consistency Checker Queue Time Spent",
            "collectionName": "consistency-checker-queue-time-spent",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.consistency.processingnanos",
                  "description": "Nanoseconds spent processing replicas in the consistency checker queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      },
      {
        "name": "Replica GC Queue",
        "longName": "All Replica GC Queue",
        "collectionName": "replication-layer-replica-gc-queue-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Count",
            "longName": "Replica GC Queue Count",
            "collectionName": "replica-gc-queue-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.replicagc.process.success",
                  "description": "Number of replicas successfully processed by the replica GC queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.replicagc.process.failure",
                  "description": "Number of replicas which failed processing in the replica GC queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.replicagc.pending",
                  "description": "Number of pending replicas in the replica GC queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replicas"
            }
          },
          {
            "name": "Time Spent",
            "longName": "Replica GC Queue Time Spent",
            "collectionName": "replica-gc-queue-time-spent",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.replicagc.processingnanos",
                  "description": "Nanoseconds spent processing replicas in the replica GC queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Removal Count",
            "longName": "Replica GC Queue Removal Count",
            "collectionName": "replica-gc-queue-removal-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.replicagc.removereplica",
                  "description": "Number of replica removals attempted by the replica gc queue",
                  "location": "storage/replica_gc_queue.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replica Removals"
            }
          }
        ]
      },
      {
        "name": "Replicate Queue",
        "longName": "All Replicate Queue",
        "collectionName": "replication-layer-replicate-queue-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Count",
            "longName": "Replicate Queue Count",
            "collectionName": "replicate-queue-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.replicate.process.success",
                  "description": "Number of replicas successfully processed by the replicate queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.replicate.process.failure",
                  "description": "Number of replicas which failed processing in the replicate queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.replicate.pending",
                  "description": "Number of pending replicas in the replicate queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.replicate.purgatory",
                  "description": "Number of replicas in the replicate queue's purgatory, awaiting allocation options",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replicas"
            }
          },
          {
            "name": "Time Spent",
            "longName": "Replicate Queue Time Spent",
            "collectionName": "replicate-queue-time-spent",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.replicate.processingnanos",
                  "description": "Nanoseconds spent processing replicas in the replicate queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          },
          {
            "name": "Add Replica Count",
            "longName": "Replicate Queue Add Replica Count",
            "collectionName": "replicate-queue-add-replica-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.replicate.addreplica",
                  "description": "Number of replica additions attempted by the replicate queue",
                  "location": "storage/replicate_queue.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replica Additions"
            }
          },
          {
            "name": "Remove Replica Count",
            "longName": "Replicate Queue Remove Replica Count",
            "collectionName": "replicate-queue-remove-replica-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.replicate.removereplica",
                  "description": "Number of replica removals attempted by the replicate queue (typically in response to a rebalancer-initiated addition)",
                  "location": "storage/replicate_queue.go"
                },
                {
                  "name": "queue.replicate.removedeadreplica",
                  "description": "Number of dead replica removals attempted by the replicate queue (typically in response to a node outage)",
                  "location": "storage/replicate_queue.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replica Removals"
            }
          },
          {
            "name": "Reblance Count",
            "longName": "Replicate Queue Reblance Count",
            "collectionName": "replicate-queue-reblance-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.replicate.rebalancereplica",
                  "description": "Number of replica rebalancer-initiated additions attempted by the replicate queue",
                  "location": "storage/replicate_queue.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replica Additions"
            }
          },
          {
            "name": "Lease Transfer Count",
            "longName": "Replicate Queue Lease Transfer Count",
            "collectionName": "replicate-queue-lease-transfer-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.replicate.transferlease",
                  "description": "Number of range lease transfers attempted by the replicate queue",
                  "location": "storage/replicate_queue.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Lease Transfers"
            }
          }
        ]
      },
      {
        "name": "Split Queue",
        "longName": "All Split Queue",
        "collectionName": "replication-layer-split-queue-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Count",
            "longName": "Split Queue Count",
            "collectionName": "split-queue-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.split.process.success",
                  "description": "Number of replicas successfully processed by the split queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.split.process.failure",
                  "description": "Number of replicas which failed processing in the split queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.split.pending",
                  "description": "Number of pending replicas in the split queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replicas"
            }
          },
          {
            "name": "Time Spent",
            "longName": "Split Queue Time Spent",
            "collectionName": "split-queue-time-spent",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.split.processingnanos",
                  "description": "Nanoseconds spent processing replicas in the split queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      },
      {
        "name": "Requests",
        "longName": "All Requests",
        "collectionName": "replication-layer-requests-all",
        "level": 1,
        "subsections": [
          {
            "name": "Slow",
            "longName": "All Requests Slow",
            "collectionName": "replication-layer-requests-slow-all",
            "level": 2,
            "charts": [
              {
                "name": "Stuck in Command Queue",
                "longName": "Requests Slow Stuck in Command Queue",
                "collectionName": "requests-slow-stuck-in-command-queue",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "requests.slow.commandqueue",
                      "description": "Number of requests that have been stuck for a long time in the command queue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Requests"
                }
              },
              {
                "name": "Stuck Acquiring Lease",
                "longName": "Requests Slow Stuck Acquiring Lease",
                "collectionName": "requests-slow-stuck-acquiring-lease",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "requests.slow.commandqueue",
                      "description": "Number of requests that have been stuck for a long time in the command queue",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Requests"
                }
              },
              {
                "name": "Stuck in Raft",
                "longName": "Requests Slow Stuck in Raft",
                "collectionName": "requests-slow-stuck-in-raft",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "requests.slow.raft",
                      "description": "Number of requests that have been stuck for a long time in raft",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Requests"
                }
              }
            ]
          },
          {
            "name": "Backpressure",
            "longName": "All Requests Backpressure",
            "collectionName": "replication-layer-requests-backpressure-all",
            "level": 2,
            "charts": [
              {
                "name": "Writes Waiting on Range Split",
                "longName": "Requests Backpressure Writes Waiting on Range Split",
                "collectionName": "requests-backpressure-writes-waiting-on-range-split",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "requests.backpressure.split",
                      "description": "Number of backpressured writes waiting on a Range split",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Writes"
                }
              }
            ]
          }
        ],
        "charts": []
      },
      {
        "name": "Node Liveness",
        "longName": "All Node Liveness",
        "collectionName": "replication-layer-node-liveness-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Node Count",
            "longName": "Node Liveness Node Count",
            "collectionName": "node-liveness-node-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "liveness.livenodes",
                  "description": "Number of live nodes in the cluster (will be 0 if this node is not itself live)",
                  "location": "storage/node_liveness.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Nodes"
            }
          },
          {
            "name": "Heartbeats Success",
            "longName": "Node Liveness Heartbeats Success",
            "collectionName": "node-liveness-heartbeats-success",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "liveness.heartbeatsuccesses",
                  "description": "Number of successful node liveness heartbeats from this node",
                  "location": "storage/node_liveness.go"
                },
                {
                  "name": "liveness.heartbeatfailures",
                  "description": "Number of failed node liveness heartbeats from this node",
                  "location": "storage/node_liveness.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Messages"
            }
          },
          {
            "name": "Epoch Increment Count",
            "longName": "Node Liveness Epoch Increment Count",
            "collectionName": "node-liveness-epoch-increment-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "liveness.epochincrements",
                  "description": "Number of times this node has incremented its liveness epoch",
                  "location": "storage/node_liveness.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Epochs"
            }
          },
          {
            "name": "Heartbeat Latency",
            "longName": "Node Liveness Heartbeat Latency",
            "collectionName": "node-liveness-heartbeat-latency",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "liveness.heartbeatlatency-max",
                  "description": "Node liveness heartbeat latency in nanoseconds for max",
                  "location": "storage/node_liveness.go"
                },
                {
                  "name": "liveness.heartbeatlatency-p50",
                  "description": "Node liveness heartbeat latency in nanoseconds for p50",
                  "location": "storage/node_liveness.go"
                },
                {
                  "name": "liveness.heartbeatlatency-p75",
                  "description": "Node liveness heartbeat latency in nanoseconds for p75",
                  "location": "storage/node_liveness.go"
                },
                {
                  "name": "liveness.heartbeatlatency-p90",
                  "description": "Node liveness heartbeat latency in nanoseconds for p90",
                  "location": "storage/node_liveness.go"
                },
                {
                  "name": "liveness.heartbeatlatency-p99",
                  "description": "Node liveness heartbeat latency in nanoseconds for p99",
                  "location": "storage/node_liveness.go"
                },
                {
                  "name": "liveness.heartbeatlatency-p99.9",
                  "description": "Node liveness heartbeat latency in nanoseconds for p99.9",
                  "location": "storage/node_liveness.go"
                },
                {
                  "name": "liveness.heartbeatlatency-p99.99",
                  "description": "Node liveness heartbeat latency in nanoseconds for p99.99",
                  "location": "storage/node_liveness.go"
                },
                {
                  "name": "liveness.heartbeatlatency-p99.999",
                  "description": "Node liveness heartbeat latency in nanoseconds for p99.999",
                  "location": "storage/node_liveness.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Normal",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      }
    ]
  },
  {
    "name": "Storage Layer",
    "longName": "Storage Layer",
    "description": "The Storage Layer reads and writes data to disk, as well as manages garbage collection. <br/><br/><a class=\"catalog-link\" href=\"https://www.cockroachlabs.com/docs/stable/architecture/storage-layer.html\">Storage Layer Architecture Docs >></a>",
    "collectionName": "storage-layer-all",
    "level": 0,
    "subsections": [
      {
        "name": "Storage",
        "longName": "All Storage",
        "collectionName": "storage-layer-storage-all",
        "level": 1,
        "subsections": [
          {
            "name": "Overview",
            "longName": "All Storage Overview",
            "collectionName": "storage-layer-storage-overview-all",
            "level": 2,
            "charts": [
              {
                "name": "Capacity",
                "longName": "Storage Overview Capacity",
                "collectionName": "storage-overview-capacity",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "capacity",
                      "description": "Total storage capacity",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "capacity.available",
                      "description": "Available storage capacity",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "capacity.used",
                      "description": "Used storage capacity",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "capacity.reserved",
                      "description": "Capacity reserved for snapshots",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              }
            ]
          },
          {
            "name": "Compactor",
            "longName": "All Storage Compactor",
            "collectionName": "storage-layer-storage-compactor-all",
            "level": 2,
            "charts": [
              {
                "name": "Sizes",
                "longName": "Storage Compactor Sizes",
                "collectionName": "storage-compactor-sizes",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "compactor.suggestionbytes.queued",
                      "description": "Number of logical bytes in suggested compactions in the queue",
                      "location": "storage/compactor/metrics.go"
                    },
                    {
                      "name": "compactor.suggestionbytes.skipped",
                      "description": "Number of logical bytes in suggested compactions which were not compacted",
                      "location": "storage/compactor/metrics.go"
                    },
                    {
                      "name": "compactor.suggestionbytes.compacted",
                      "description": "Number of logical bytes compacted from suggested compactions",
                      "location": "storage/compactor/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Success",
                "longName": "Storage Compactor Success",
                "collectionName": "storage-compactor-success",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "compactor.compactions.success",
                      "description": "Number of successful compaction requests sent to the storage engine",
                      "location": "storage/compactor/metrics.go"
                    },
                    {
                      "name": "compactor.compactions.failure",
                      "description": "Number of failed compaction requests sent to the storage engine",
                      "location": "storage/compactor/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Compaction Requests"
                }
              },
              {
                "name": "Time",
                "longName": "Storage Compactor Time",
                "collectionName": "storage-compactor-time",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "compactor.compactingnanos",
                      "description": "Number of nanoseconds spent compacting ranges",
                      "location": "storage/compactor/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Duration",
                  "axisLabel": "Time"
                }
              }
            ]
          },
          {
            "name": "KV",
            "longName": "All Storage KV",
            "collectionName": "storage-layer-storage-kv-all",
            "level": 2,
            "charts": [
              {
                "name": "Size",
                "longName": "Storage KV Size",
                "collectionName": "storage-kv-size",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "livebytes",
                      "description": "Number of bytes of live data (keys plus values)",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "keybytes",
                      "description": "Number of bytes taken up by keys",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "valbytes",
                      "description": "Number of bytes taken up by values",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "totalbytes",
                      "description": "Total number of bytes taken up by keys and values including non-live data",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "intentbytes",
                      "description": "Number of bytes in intent KV pairs",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "sysbytes",
                      "description": "Number of bytes in system KV pairs",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Counts",
                "longName": "Storage KV Counts",
                "collectionName": "storage-kv-counts",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "livecount",
                      "description": "Count of live keys",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "keycount",
                      "description": "Count of all keys",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "valcount",
                      "description": "Count of all values",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "intentcount",
                      "description": "Count of intent keys",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "syscount",
                      "description": "Count of system KV pairs",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Keys"
                }
              },
              {
                "name": "Cumultative Intent Age",
                "longName": "Storage KV Cumultative Intent Age",
                "collectionName": "storage-kv-cumultative-intent-age",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "intentage",
                      "description": "Cumulative age of intents in seconds",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Duration",
                  "axisLabel": "Time"
                }
              },
              {
                "name": "Cumultative Age of Non-Live Data",
                "longName": "Storage KV Cumultative Age of Non-Live Data",
                "collectionName": "storage-kv-cumultative-age-of-non-live-data",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "gcbytesage",
                      "description": "Cumulative age of non-live data in seconds",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Duration",
                  "axisLabel": "Time"
                }
              },
              {
                "name": "Metric Update Frequency",
                "longName": "Storage KV Metric Update Frequency",
                "collectionName": "storage-kv-metric-update-frequency",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "lastupdatenanos",
                      "description": "Time in nanoseconds since Unix epoch at which bytes/keys/intents metrics were last updated",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "AVG",
                  "aggregator": "AVG",
                  "rate": "Rate",
                  "units": "Duration",
                  "axisLabel": "Time"
                }
              }
            ]
          }
        ],
        "charts": []
      },
      {
        "name": "RocksDB",
        "longName": "All RocksDB",
        "collectionName": "storage-layer-rocksdb-all",
        "level": 1,
        "subsections": [
          {
            "name": "Overview",
            "longName": "All RocksDB Overview",
            "collectionName": "storage-layer-rocksdb-overview-all",
            "level": 2,
            "charts": [
              {
                "name": "Bloom Filter",
                "longName": "RocksDB Overview Bloom Filter",
                "collectionName": "rocksdb-overview-bloom-filter",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "rocksdb.bloom.filter.prefix.checked",
                      "description": "Number of times the bloom filter was checked",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "rocksdb.bloom.filter.prefix.useful",
                      "description": "Number of times the bloom filter helped avoid iterator creation",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Bloom Filter Ops"
                }
              },
              {
                "name": "Memtable",
                "longName": "RocksDB Overview Memtable",
                "collectionName": "rocksdb-overview-memtable",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "rocksdb.memtable.total-size",
                      "description": "Current size of memtable in bytes",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Flushes",
                "longName": "RocksDB Overview Flushes",
                "collectionName": "rocksdb-overview-flushes",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "rocksdb.flushes",
                      "description": "Number of table flushes",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Flushes"
                }
              },
              {
                "name": "Compactions",
                "longName": "RocksDB Overview Compactions",
                "collectionName": "rocksdb-overview-compactions",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "rocksdb.compactions",
                      "description": "Number of table compactions",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Compactions"
                }
              },
              {
                "name": "Index & Filter Block Size",
                "longName": "RocksDB Overview Index & Filter Block Size",
                "collectionName": "rocksdb-overview-index-filter-block-size",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "rocksdb.table-readers-mem-estimate",
                      "description": "Memory used by index and filter blocks",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              },
              {
                "name": "Read Amplification",
                "longName": "RocksDB Overview Read Amplification",
                "collectionName": "rocksdb-overview-read-amplification",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "rocksdb.read-amplification",
                      "description": "Number of disk reads per query",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Disk Reads per Query"
                }
              }
            ]
          },
          {
            "name": "Block Cache",
            "longName": "All RocksDB Block Cache",
            "collectionName": "storage-layer-rocksdb-block-cache-all",
            "level": 2,
            "charts": [
              {
                "name": "Success",
                "longName": "RocksDB Block Cache Success",
                "collectionName": "rocksdb-block-cache-success",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "rocksdb.block.cache.hits",
                      "description": "Count of block cache hits",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "rocksdb.block.cache.misses",
                      "description": "Count of block cache misses",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "AVG",
                  "aggregator": "AVG",
                  "rate": "Non-negative rate",
                  "units": "Count",
                  "axisLabel": "Cache Ops"
                }
              },
              {
                "name": "Size",
                "longName": "RocksDB Block Cache Size",
                "collectionName": "rocksdb-block-cache-size",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "rocksdb.block.cache.usage",
                      "description": "Bytes used by the block cache",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "rocksdb.block.cache.pinned-usage",
                      "description": "Bytes pinned by the block cache",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Bytes",
                  "axisLabel": "Size"
                }
              }
            ]
          },
          {
            "name": "SSTables",
            "longName": "All RocksDB SSTables",
            "collectionName": "storage-layer-rocksdb-sstables-all",
            "level": 2,
            "charts": [
              {
                "name": "Count",
                "longName": "RocksDB SSTables Count",
                "collectionName": "rocksdb-sstables-count",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "rocksdb.num-sstables",
                      "description": "Number of rocksdb SSTables",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "SSTables"
                }
              },
              {
                "name": "Ingestions",
                "longName": "RocksDB SSTables Ingestions",
                "collectionName": "rocksdb-sstables-ingestions",
                "level": 3,
                "timeseries": {
                  "data": [
                    {
                      "name": "addsstable.proposals",
                      "description": "Number of SSTable ingestions proposed (i.e. sent to Raft by lease holders)",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "addsstable.applications",
                      "description": "Number of SSTable ingestions applied (i.e. applied by Replicas)",
                      "location": "storage/metrics.go"
                    },
                    {
                      "name": "addsstable.copies",
                      "description": "number of SSTable ingestions that required copying files during application",
                      "location": "storage/metrics.go"
                    }
                  ],
                  "downsampler": "MAX",
                  "aggregator": "SUM",
                  "rate": "Normal",
                  "units": "Count",
                  "axisLabel": "Ingestions"
                }
              }
            ]
          }
        ],
        "charts": []
      },
      {
        "name": "Garbage Collection",
        "longName": "All Garbage Collection",
        "collectionName": "storage-layer-garbage-collection-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Queue Success",
            "longName": "Garbage Collection Queue Success",
            "collectionName": "garbage-collection-queue-success",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.gc.process.success",
                  "description": "Number of replicas successfully processed by the GC queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.gc.process.failure",
                  "description": "Number of replicas which failed processing in the GC queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.gc.pending",
                  "description": "Number of pending replicas in the GC queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replicas"
            }
          },
          {
            "name": "Queue Time",
            "longName": "Garbage Collection Queue Time",
            "collectionName": "garbage-collection-queue-time",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.gc.processingnanos",
                  "description": "Nanoseconds spent processing replicas in the GC queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      }
    ]
  },
  {
    "name": "Timeseries",
    "longName": "Timeseries",
    "description": "Your cluster collects data about its own performance, which is used to power the very charts you're using, among other things.",
    "collectionName": "timeseries-all",
    "level": 0,
    "subsections": [
      {
        "name": "Overview",
        "longName": "All Overview",
        "collectionName": "timeseries-overview-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Count",
            "longName": "Overview Count",
            "collectionName": "overview-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "timeseries.write.samples",
                  "description": "Total number of metric samples written to disk",
                  "location": "ts/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Metric Samples"
            }
          },
          {
            "name": "Size",
            "longName": "Overview Size",
            "collectionName": "overview-size",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "timeseries.write.bytes",
                  "description": "Total size in bytes of metric samples written to disk",
                  "location": "ts/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Bytes",
              "axisLabel": "Size"
            }
          },
          {
            "name": "Error Count",
            "longName": "Overview Error Count",
            "collectionName": "overview-error-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "timeseries.write.errors",
                  "description": "Total errors encountered while attempting to write metrics to disk",
                  "location": "ts/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Errors"
            }
          }
        ]
      },
      {
        "name": "Maintenance Queue",
        "longName": "All Maintenance Queue",
        "collectionName": "timeseries-maintenance-queue-all",
        "level": 1,
        "subsections": [],
        "charts": [
          {
            "name": "Count",
            "longName": "Maintenance Queue Count",
            "collectionName": "maintenance-queue-count",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.tsmaintenance.process.success",
                  "description": "Number of replicas successfully processed by the time series maintenance queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.tsmaintenance.process.failure",
                  "description": "Number of replicas which failed processing in the time series maintenance queue",
                  "location": "storage/metrics.go"
                },
                {
                  "name": "queue.tsmaintenance.pending",
                  "description": "Number of pending replicas in the time series maintenance queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "MAX",
              "aggregator": "SUM",
              "rate": "Normal",
              "units": "Count",
              "axisLabel": "Replicas"
            }
          },
          {
            "name": "Time Spent",
            "longName": "Maintenance Queue Time Spent",
            "collectionName": "maintenance-queue-time-spent",
            "level": 2,
            "timeseries": {
              "data": [
                {
                  "name": "queue.tsmaintenance.processingnanos",
                  "description": "Nanoseconds spent processing replicas in the time series maintenance queue",
                  "location": "storage/metrics.go"
                }
              ],
              "downsampler": "AVG",
              "aggregator": "AVG",
              "rate": "Rate",
              "units": "Duration",
              "axisLabel": "Time"
            }
          }
        ]
      }
    ]
  }
]
